#!/usr/bin/env python

import argparse
import simplejson as json
import jsonschema
import csv

parser = argparse.ArgumentParser(description='A script convert between different sequence feature formats' )
parser.add_argument('-i', '--input', type=argparse.FileType('r'), help="An input feature file",\
	 default='-')
parser.add_argument('-o', '--output', type=argparse.FileType('w'), help="A output feature file",\
	 default='-')
parser.add_argument('-if', '--infmt', help ="Input format", choices=["csv"], default="csv") 
parser.add_argument('-of', '--outfmt', help ="Desired output format", choices=["esom-lrn"], default="esom-lrn") 
args = parser.parse_args()

# class featureset(object):
# 	""" A class for a feature describing a sequence"""
# 	def __init__(self):
# 	self.taxid = None
# 	self.feature

	
def csv2esom(csvhandle, esomhandle):
	"""Returns a dictionary of features from a csv"""
	for i, line in enumerate(csvhandle):
		list =  line.split().strip()
		length = len(list)
		if i == 0:
			elements = length
		assert elements == length, "line %d has %d elements, but  the first line has %d" % (i+1, length, elements)
	esomhandle.write("# ESOM .lrn file generated by Genes Structure Classifier " + "\n")
	esomhandle.write("% " +str(i) + "\n")
	esomhandle.write("% " + str(elem) + "\n")
	line4 = [ "9"] + ["1"]*(length-1)
	esomhandle.write("% " + ('\t'.join(map(str,line4)) + "\n"))
	names = []
	for j in range(length-1):
		names.append(str("feat" + str(j))
	line5 = ["taxid"] + names
	esomhandle.write("% " + ('\t'.join(map(str,line5)) + "\n"
	for line in csvhandle:
		esomhandle.write(line)

if args.if == "csv" and args.of == "esom-lrn":
	csv2esom(args.input,args.output)
else:
	raise ValueError('Only csv to esom .lrn conversion is supported at this time') 