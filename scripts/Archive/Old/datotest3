#!/usr/bin/env python

import graphlab as gl
from sklearn.metrics import precision_recall_curve
import numpy as np
import matplotlib.pyplot as plt
gl.set_runtime_config('GRAPHLAB_CACHE_FILE_LOCATIONS','/scratch')
gl.set_runtime_config('GRAPHLAB_FILEIO_MAXIMUM_CACHE_CAPACITY',40000000000)
gl.set_runtime_config('GRAPHLAB_FILEIO_MAXIMUM_CACHE_CAPACITY_PER_FILE', 40000000000)
gl.set_runtime_config('GRAPHLAB_SFRAME_SORT_BUFFER_SIZE',40000000000)


#test =  gl.SFrame.read_csv('/global/projectb/scratch/arrivers/geneleanrntest/20150818/test.twoclass.txt', delimiter='\t', header=False)
#train =  gl.SFrame.read_csv('/global/projectb/scratch/arrivers/geneleanrntest/20150818/train.twoclass.txt', delimiter='\t', header=False)
#test.save('test_twoclass_sframe')
#train.save('train_twoclass_sframe')

test = gl.load_sframe('test_twoclass_sframe')
train = gl.load_sframe('train_twoclass_sframe')
#model = gl.svm_classifier.create(train, target='X1', class_weights='auto', max_iterations=50)
#model.save("dato.SVM.model")
model = gl.load_model('dato.SVM.model')
results = model.evaluate(test)
pc = model.predict(test)
pm = model.predict(test, output_type='margin')

x1 = np.array(test['X1'])
pm_np = np.array(pm)
precision, recall, thresholds = precision_recall_curve(x1,pm_np, pos_label="viral")

print(results)
print(results["confusion_matrix"].print_rows(200,3))

prdata = gl.SFrame(test['X1'], gl.SArray(pm))